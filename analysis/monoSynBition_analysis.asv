% monoSynBition_analysis
% Manu 2023

% 1 RUN ANALYSIS
padding_opotogenetic_pulse = 0.1;
winSize = 0.2;
binSize = 0.001;
% cd("C:\Users\mvalero\Dropbox\DATA\monoSynBition_models\");
cd D:\monoSynBition_models
all_simulations = dir;


for ii = 3:length(all_simulations)
    try cd([all_simulations(ii).folder filesep all_simulations(ii).name])
        spikes = getCSVCells('cvsFiles',{'spk_E.csv', 'spk_I.csv'}, 'cellsInCSV', [800, 200]); % load simulation
        
        features = readmatrix('features.csv');% load features
        session = getSession_simulation(features, spikes, padding_opotogenetic_pulse);
        
        uLEDPulses = getuLEDPulses_simulation(session);
        
        sessionName = strsplit(pwd,filesep);
        sessionName = sessionName{end};
        parsave([pwd filesep sessionName '.uLEDPulses.event.mat'],'uLEDPulses');
        
        % compute pulses amplitude
        uLEDResponses_interval = getuLEDResponse_intervals([session.inhibition_times - 0.01 session.inhibition_times + 0.01],'spikes',spikes,'uLEDPulses',uLEDPulses,'doPlot', false);
    end
end

% 
save('results.mat','simulations_results','-v7.3');

% 2 COLLECT RESULTS
cd D:\monoSynBition_models

simulations_results = [];
all_simulations = dir;
probed_cells = 1:80; 

for ii = 1:length(all_simulations)
    try cd([all_simulations(ii).folder filesep all_simulations(ii).name])

        session = getSession_simulation([], struct([]), padding_opotogenetic_pulse);

        uLEDResponses_interval = getuLEDResponse_intervals([0 0]);
        simulations_results.rate_inInterval(ii) = mean(uLEDResponses_interval.in_interval.rateDuringPulse(probed_cells));
        simulations_results.rate_outInterval(ii) = mean(uLEDResponses_interval.out_interval.rateDuringPulse(probed_cells));

        simulations_results.optogenetic_pulse_amplitude(ii) = session.optogenetic_pulse_amplitude;
        simulations_results.GABA_conductance(ii) = session.GABA_conductance;
    end
end
z = ((simulations_results.rate_outInterval - simulations_results.rate_inInterval)/)';
x = simulations_results.optogenetic_pulse_amplitude';
y = simulations_results.GABA_conductance';
mdl = scatteredInterpolant(x,  y, z');
[xg, yg] = meshgrid(unique(x), unique(y));
zg = mdl(xg, yg);
sup = surf(xg,yg,zg);

contourf(zg)


